#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <250>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <250>;
};

/ {
    combos {
        compatible = "zmk,combos";

        lay1_right {
            bindings = <&mo 1>;
            key-positions = <16 28>;
        };

        holdSpace {
            bindings = <&kp SPACE>;
            key-positions = <13 38>;
        };

        lay1_left {
            bindings = <&mo 1>;
            key-positions = <15 27>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    ttp224tap: ttp224tap {
        compatible = "zmk,kscan-sideband-behaviors";
        kscan = <&touchkey1>;
        auto-enable;

        touch {
            column = <0>;
            row = <0>;
            bindings = <&mo 4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W      &kp E         &kp R            &kp T                                                                &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A             &kp S      &kp D         &lt 6 F          &kp G        &kp TAB                          &kp KP_PLUS            &kp H        &kp J  &kp K      &lt 5 L     &mt RIGHT_ALT MINUS
&mt LEFT_SHIFT Z  &kp X      &kp C         &kp V            &kp B        &kp LEFT_GUI                     &mt LEFT_GUI ASTERISK  &kp N        &kp M  &kp COMMA  &kp PERIOD  &mt RIGHT_SHIFT SLASH
&kp LEFT_SHIFT    &kp LCTRL  &kp LEFT_ALT  &lt 6 BACKSPACE  &lt 2 SPACE  &mt LEFT_CONTROL LANGUAGE_2      &lt 2 LANGUAGE_1       &lt 3 ENTER                                &kp ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        HARDWEAR {
            bindings = <
&none          &studio_unlock  &bootloader    &bt BT_CLR_ALL  &bt BT_CLR                         &none   &none   &none          &kp C_MUTE         &none
&bt BT_SEL 0   &bt BT_SEL 1    &bt BT_SEL 2   &bt BT_SEL 3    &bt BT_SEL 4   &none       &none   &none   &none   &kp C_BRI_UP   &kp C_VOLUME_UP    &none
&bt BT_DISC 0  &bt BT_DISC 1   &bt BT_DISC 2  &bt BT_DISC 3   &bt BT_DISC 4  &none       &none   &none   &trans  &kp C_BRI_DEC  &kp C_VOLUME_DOWN  &none
&trans         &trans          &trans         &trans          &trans         &trans      &trans  &trans                                            &trans
            >;
        };

        NUM {
            bindings = <
&kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(N5)                      &kp LS(NUMBER_6)  &kp LS(N7)         &kp LS(N8)  &kp LS(N9)  &kp LS(NUMBER_0)
&kp NUMBER_1      &kp NUMBER_2      &kp NUMBER_3      &kp NUMBER_4      &kp N5      &trans      &trans  &kp NUMBER_6      &kp N7             &kp N8      &kp N9      &kp N0
&kp LEFT_SHIFT    &none             &none             &trans            &trans      &trans      &none   &kp SEMICOLON     &kp LS(SEMICOLON)  &trans      &trans      &kp RIGHT_SHIFT
&trans            &trans            &trans            &kp DELETE        &trans      &trans      &trans  &kp TAB                                                      &kp INT3
            >;
        };

        FX-ARROW {
            bindings = <
&kp F1          &kp F2  &kp F3  &kp F4      &kp F5                       &kp HOME  &kp PG_UP      &kp UP_ARROW    &kp RC(PG_UP)      &kp LEFT_BRACKET
&kp F6          &kp F7  &kp F8  &kp F9      &kp F10  &trans      &trans  &none     &kp LEFT       &kp DOWN_ARROW  &kp RIGHT          &kp RIGHT_BRACKET
&kp LEFT_SHIFT  &none   &none   &kp F11     &kp F12  &trans      &trans  &kp END   &kp PAGE_DOWN  &trans          &kp RC(PAGE_DOWN)  &kp LS(LEFT_BRACKET)
&trans          &trans  &trans  &kp DELETE  &trans   &trans      &trans  &trans                                                      &kp LS(RIGHT_BRACKET)
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB2  &mo 5     &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &mkp MB3  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        SYMBOL {
            bindings = <
&trans  &trans  &trans         &trans  &trans                      &kp LS(BACKSLASH)  &kp APOS      &kp LS(EQUAL)  &kp SEMI      &kp GRAVE
&trans  &trans  &kp LA(GRAVE)  &trans  &trans  &trans      &trans  &kp BACKSLASH      &kp LS(APOS)  &kp EQUAL      &kp LS(SEMI)  &kp LS(GRAVE)
&trans  &trans  &trans         &trans  &trans  &trans      &trans  &trans             &trans        &trans         &trans        &trans
&trans  &trans  &trans         &trans  &trans  &trans      &trans  &trans                                                        &kp PRINTSCREEN
            >;
        };
    };
};
